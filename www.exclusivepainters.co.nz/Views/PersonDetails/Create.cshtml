@model www.exclusivepainters.co.nz.Models.PersonDetail

@{
    Layout = null;
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="container">
    <div class="modal fade" id="myModal">
        <div class="modal-dialog " style="overflow-y:initial !important">
            <div class="modal-content">
                <div class="modal-header" style="">
                    <h4 class="modal-title"> Register </h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>
                <div class="modal-body" style="height:80vh;overflow-y:auto"> 
                    <div class="form-horizontal">
                        <h4>PersonDetail</h4>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.FirstName, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.LastName, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.Mobile, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.Mobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.EmailId, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.EmailId, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.Password, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Register.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Register.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Register.ConfirmPassword, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Address.FlatUnit, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.FlatUnit, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.FlatUnit, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Address.Suburb, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.Suburb, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.Suburb, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group" style="display:flex;flex-direction:column">
                            @Html.LabelFor(model => model.Address.PostalCode, htmlAttributes: new { @class = "control-label col-md-2", style = "text-align:left;" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

